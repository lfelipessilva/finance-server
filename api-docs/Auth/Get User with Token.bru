meta {
  name: Get User with Token
  type: http
  seq: 7
}

get {
  url: {{url}}/user?email=user@example.com
  auth: bearer
}

auth:bearer {
  token: {{access_token}}
}

docs {
  # Get User with Token

  This request demonstrates how to use the access token obtained from authentication to make authenticated API calls.

  ## Setup

  1. First, create a user or authenticate with Google to get an access token
  2. Set the `access_token` variable in your Bruno environment
  3. Use this request to test authenticated endpoints

  ## Environment Variables

  Add this to your Bruno environment:
  ```json
  {
    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
  }
  ```

  ## How to Set Access Token

  ### Method 1: Manual Setup
  1. Copy the access token from a successful authentication response
  2. Add it to your Bruno environment variables
  3. Reference it as `{{access_token}}` in requests

  ### Method 2: Automatic Setup (Bruno Script)
  ```javascript
  // In a test script after successful authentication
  const response = await req.send();
  const data = response.body;
  
  if (data.access_token) {
    bm.setEnvVar('access_token', data.access_token);
  }
  ```

  ## Expected Response

  ### Success Response (200 OK)
  ```json
  {
    "id": 1,
    "email": "user@example.com",
    "name": "John Doe",
    "provider": "google",
    "provider_user_id": "123456789",
    "profile_picture": "https://lh3.googleusercontent.com/a/ACg8ocJ..."
  }
  ```

  ### Error Response (401 Unauthorized)
  ```json
  {
    "error": "Invalid or missing authorization token"
  }
  ```

  ### Error Response (404 Not Found)
  ```json
  {
    "error": "User not found"
  }
  ```

  ## JWT Token Structure

  The access token contains:
  ```json
  {
    "user_id": 1,
    "email": "user@example.com",
    "exp": 1735688000
  }
  ```

  ## Security Best Practices

  - Store tokens securely (not in localStorage for production)
  - Use HTTPS in production
  - Implement token refresh mechanism
  - Set appropriate token expiration times
  - Validate tokens on every request
  - Log authentication events for security monitoring

  ## Token Usage in Other Endpoints

  Use the same pattern for other protected endpoints:
  ```
  Authorization: Bearer {{access_token}}
  ```
} 